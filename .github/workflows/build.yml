name: Cross-Platform Build

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build:
          - name: 'neobelt-linux-amd64'
            platform: 'linux/amd64'
            os: 'ubuntu-latest'
          - name: 'neobelt-windows-amd64'
            platform: 'windows/amd64'
            os: 'windows-latest'
          - name: 'neobelt-darwin-universal'
            platform: 'darwin/universal'
            os: 'macos-latest'
    
    runs-on: ${{ matrix.build.os }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Build application
        uses: dAppServer/wails-build-action@v2.2
        with:
          build-name: ${{ matrix.build.name }}
          build-platform: ${{ matrix.build.platform }}
          package: true
          go-version: '1.23'

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.build.name }}
          path: |
            ./build/bin/*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./artifacts/neobelt-linux-amd64/*
            ./artifacts/neobelt-windows-amd64/*
            ./artifacts/neobelt-darwin-universal/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}